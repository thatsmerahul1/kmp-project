name: CI Pipeline 2025

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 1' # Weekly run on Mondays at 2 AM

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'zulu'
  GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx4g -XX:MaxMetaspaceSize=1g" -Dorg.gradle.daemon=false -Dkotlin.incremental=false'

jobs:
  # Job for validation and setup
  setup-and-validate:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.gradle-cache-key }}
      should-run-tests: ${{ steps.changes.outputs.should-run-tests }}
      should-build-android: ${{ steps.changes.outputs.should-build-android }}
      should-build-ios: ${{ steps.changes.outputs.should-build-ios }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Generate cache keys
      id: cache-keys
      run: |
        GRADLE_CACHE_KEY="${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}"
        echo "gradle-cache-key=$GRADLE_CACHE_KEY" >> $GITHUB_OUTPUT
        
    - name: Detect changes
      id: changes
      run: |
        if [ "${{ github.event_name }}" == "schedule" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "should-run-tests=true" >> $GITHUB_OUTPUT
          echo "should-build-android=true" >> $GITHUB_OUTPUT
          echo "should-build-ios=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "pull_request" ]; then
          # For PRs, check what files changed
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(kt|kts|gradle|toml)$' > /dev/null; then
            echo "should-run-tests=true" >> $GITHUB_OUTPUT
            echo "should-build-android=true" >> $GITHUB_OUTPUT
            echo "should-build-ios=true" >> $GITHUB_OUTPUT
          else
            echo "should-run-tests=false" >> $GITHUB_OUTPUT
            echo "should-build-android=false" >> $GITHUB_OUTPUT
            echo "should-build-ios=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "should-run-tests=true" >> $GITHUB_OUTPUT
          echo "should-build-android=true" >> $GITHUB_OUTPUT
          echo "should-build-ios=true" >> $GITHUB_OUTPUT
        fi

  # Parallel testing jobs
  test-shared:
    runs-on: ubuntu-latest
    needs: setup-and-validate
    if: needs.setup-and-validate.outputs.should-run-tests == 'true'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: wrapper
        cache-read-only: false
        
    - name: Run shared module tests
      run: ./gradlew :shared:allTests --continue --parallel
      
    - name: Upload shared test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: shared-test-reports
        path: shared/build/reports/tests/
        retention-days: 7
        
  test-android:
    runs-on: ubuntu-latest
    needs: setup-and-validate
    if: needs.setup-and-validate.outputs.should-build-android == 'true'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        cache-read-only: false
        
    - name: Run Android unit tests
      run: |
        ./gradlew :androidApp:testDebugUnitTest --continue --parallel
        ./gradlew :androidApp:testReleaseUnitTest --continue --parallel
      
    - name: Upload Android test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-test-reports
        path: androidApp/build/reports/tests/
        retention-days: 7

  test-ios:
    runs-on: macos-latest
    needs: setup-and-validate
    if: needs.setup-and-validate.outputs.should-build-ios == 'true'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        cache-read-only: false
        
    - name: Build shared framework for iOS
      run: ./gradlew :shared:linkDebugFrameworkIosSimulatorArm64 --parallel
      
    - name: Run iOS tests (if available)
      run: |
        if [ -f "iosApp/iosAppTests/iosAppTests.swift" ]; then
          cd iosApp
          xcodebuild test -scheme iosApp -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' || true
        else
          echo "No iOS tests found, skipping"
        fi

  # Coverage job that depends on test jobs
  coverage:
    runs-on: ubuntu-latest
    needs: [test-shared, test-android]
    if: always() && (needs.test-shared.result != 'skipped' || needs.test-android.result != 'skipped')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*-test-reports'
        merge-multiple: true
        
    - name: Generate coverage report
      run: |
        ./gradlew koverHtmlReport koverXmlReport --continue
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: |
          build/reports/kover/html/
          build/reports/kover/xml/
        retention-days: 30
        
    - name: Coverage Report Comment
      uses: mi-kas/kover-report@v1
      if: github.event_name == 'pull_request'
      with:
        path: build/reports/kover/xml/report.xml
        title: ðŸ“Š Code Coverage Report
        update-comment: true
        min-coverage-overall: 85
        min-coverage-changed-files: 85
        coverage-counter-type: LINE
        
    - name: Verify coverage thresholds
      run: ./gradlew koverVerify
          
  android-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Android Debug APK
      run: ./gradlew :androidApp:assembleDebug
      
    - name: Build Android Release APK
      run: ./gradlew :androidApp:assembleRelease
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: androidApp/build/outputs/apk/debug/*.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: android-release-apk
        path: androidApp/build/outputs/apk/release/*.apk

  ios-build:
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build shared framework for iOS
      run: ./gradlew :shared:assembleXCFramework
      
    - name: Build iOS project
      run: |
        cd iosApp
        xcodebuild -scheme iosApp -destination "platform=iOS Simulator,name=iPhone 15" build
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run ktlint
      run: ./gradlew ktlintCheck || true
      
    - name: Run detekt
      run: ./gradlew detekt || true