name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          - Weather KMP template release
          - Production-ready Kotlin Multiplatform template
          - Android and iOS implementations
          - Comprehensive testing suite
          
          ## Features
          - Clean Architecture with MVVM
          - Offline-first data strategy
          - Modern UI with Jetpack Compose and SwiftUI
          - 85% code sharing between platforms
          
          ## Installation
          1. Download the APK for Android
          2. Clone the repository and build for iOS
          3. Configure your OpenWeatherMap API key
          
        draft: false
        prerelease: false

  android-release:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew :shared:allTests :androidApp:testDebugUnitTest
      
    - name: Build Release APK
      run: ./gradlew :androidApp:assembleRelease
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: androidApp/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        asset_name: WeatherKMP-release.apk
        asset_content_type: application/vnd.android.package-archive

  ios-release:
    runs-on: macos-latest
    needs: create-release
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build shared framework for iOS
      run: ./gradlew :shared:assembleXCFramework
      
    - name: Archive iOS app
      run: |
        cd iosApp
        xcodebuild -scheme iosApp -configuration Release -destination "generic/platform=iOS" archive -archivePath build/WeatherKMP.xcarchive
        
    - name: Export IPA
      run: |
        cd iosApp
        xcodebuild -exportArchive -archivePath build/WeatherKMP.xcarchive -exportPath build/ -exportOptionsPlist exportOptions.plist
        
    - name: Upload IPA
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: iosApp/build/WeatherKMP.ipa
        asset_name: WeatherKMP-release.ipa
        asset_content_type: application/octet-stream