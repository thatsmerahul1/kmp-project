name: Release Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'zulu'

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.new_version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: wrapper
        cache-read-only: false
        
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install semantic-release dependencies
      run: |
        npm install -g \
          semantic-release@21 \
          @semantic-release/changelog@6 \
          @semantic-release/git@10 \
          @semantic-release/github@9 \
          @semantic-release/exec@6 \
          conventional-changelog-conventionalcommits@6
          
    - name: Create semantic-release config
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "repositoryUrl": "https://github.com/${{ github.repository }}",
          "plugins": [
            [
              "@semantic-release/commit-analyzer",
              {
                "preset": "conventionalcommits",
                "releaseRules": [
                  {"type": "feat", "release": "minor"},
                  {"type": "fix", "release": "patch"},
                  {"type": "perf", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "docs", "release": false},
                  {"type": "test", "release": false},
                  {"type": "ci", "release": false},
                  {"type": "chore", "release": false},
                  {"breaking": true, "release": "major"}
                ]
              }
            ],
            [
              "@semantic-release/release-notes-generator",
              {
                "preset": "conventionalcommits",
                "presetConfig": {
                  "types": [
                    {"type": "feat", "section": "🚀 Features"},
                    {"type": "fix", "section": "🐛 Bug Fixes"},
                    {"type": "perf", "section": "⚡ Performance"},
                    {"type": "refactor", "section": "♻️ Refactoring"},
                    {"type": "docs", "section": "📚 Documentation"},
                    {"type": "test", "section": "🧪 Tests"},
                    {"type": "ci", "section": "🔧 CI/CD"},
                    {"type": "chore", "section": "🔨 Chores"}
                  ]
                }
              }
            ],
            [
              "@semantic-release/changelog",
              {
                "changelogFile": "CHANGELOG.md",
                "changelogTitle": "# 📋 Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n<!-- next-version -->"
              }
            ],
            [
              "@semantic-release/exec",
              {
                "prepareCmd": "echo 'Preparing release ${nextRelease.version}'",
                "publishCmd": "echo 'Publishing release ${nextRelease.version}'"
              }
            ],
            [
              "@semantic-release/github",
              {
                "assets": [
                  {
                    "path": "androidApp/build/outputs/apk/release/*.apk",
                    "label": "Android APK"
                  },
                  {
                    "path": "androidApp/build/outputs/bundle/release/*.aab",
                    "label": "Android App Bundle"
                  }
                ],
                "discussionCategoryName": "Releases"
              }
            ],
            [
              "@semantic-release/git",
              {
                "assets": ["CHANGELOG.md", "package.json"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }
            ]
          ]
        }
        EOF
        
    - name: Generate version and changelog
      id: version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Run semantic-release in dry-run mode to get version
        npx semantic-release --dry-run > release-output.txt 2>&1 || true
        
        # Extract version from output
        NEW_VERSION=$(grep -o "The next release version is [0-9]\+\.[0-9]\+\.[0-9]\+" release-output.txt | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1)
        
        if [ -z "$NEW_VERSION" ]; then
          echo "No new version to release"
          echo "new_version=" >> $GITHUB_OUTPUT
        else
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate changelog
      id: changelog
      if: steps.version.outputs.new_version != ''
      run: |
        # Create a proper package.json for semantic-release
        cat > package.json << 'EOF'
        {
          "name": "weather-kmp",
          "version": "0.0.0",
          "description": "Weather KMP Application",
          "private": true
        }
        EOF
        
        # Run semantic-release to generate changelog
        npx semantic-release --dry-run > changelog-output.txt 2>&1 || true
        
        # Extract changelog content
        if [ -f "CHANGELOG.md" ]; then
          echo "Changelog generated successfully"
          CHANGELOG_CONTENT=$(cat CHANGELOG.md | head -50)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "No changelog generated"
          echo "changelog=" >> $GITHUB_OUTPUT
        fi
        
    - name: Upload changelog artifact
      if: steps.version.outputs.new_version != ''
      uses: actions/upload-artifact@v4
      with:
        name: changelog
        path: CHANGELOG.md
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    needs: generate-changelog
    if: needs.generate-changelog.outputs.version != '' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      
    - name: Build release APK and AAB
      run: |
        ./gradlew :androidApp:assembleRelease
        ./gradlew :androidApp:bundleRelease
        
    - name: Install Node.js and semantic-release
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install semantic-release dependencies
      run: |
        npm install -g \
          semantic-release@21 \
          @semantic-release/changelog@6 \
          @semantic-release/git@10 \
          @semantic-release/github@9 \
          @semantic-release/exec@6 \
          conventional-changelog-conventionalcommits@6
          
    - name: Create release configuration
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "repositoryUrl": "https://github.com/${{ github.repository }}",
          "plugins": [
            [
              "@semantic-release/commit-analyzer",
              {
                "preset": "conventionalcommits",
                "releaseRules": [
                  {"type": "feat", "release": "minor"},
                  {"type": "fix", "release": "patch"},
                  {"type": "perf", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "docs", "release": false},
                  {"type": "test", "release": false},
                  {"type": "ci", "release": false},
                  {"type": "chore", "release": false},
                  {"breaking": true, "release": "major"}
                ]
              }
            ],
            [
              "@semantic-release/release-notes-generator",
              {
                "preset": "conventionalcommits",
                "presetConfig": {
                  "types": [
                    {"type": "feat", "section": "🚀 Features"},
                    {"type": "fix", "section": "🐛 Bug Fixes"},
                    {"type": "perf", "section": "⚡ Performance"},
                    {"type": "refactor", "section": "♻️ Refactoring"},
                    {"type": "docs", "section": "📚 Documentation"},
                    {"type": "test", "section": "🧪 Tests"},
                    {"type": "ci", "section": "🔧 CI/CD"},
                    {"type": "chore", "section": "🔨 Chores"}
                  ]
                }
              }
            ],
            [
              "@semantic-release/changelog",
              {
                "changelogFile": "CHANGELOG.md",
                "changelogTitle": "# 📋 Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n<!-- next-version -->"
              }
            ],
            [
              "@semantic-release/github",
              {
                "assets": [
                  {
                    "path": "androidApp/build/outputs/apk/release/*.apk",
                    "label": "Android APK"
                  },
                  {
                    "path": "androidApp/build/outputs/bundle/release/*.aab",
                    "label": "Android App Bundle"
                  }
                ],
                "discussionCategoryName": "Releases"
              }
            ],
            [
              "@semantic-release/git",
              {
                "assets": ["CHANGELOG.md", "package.json"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }
            ]
          ]
        }
        EOF
        
    - name: Create package.json
      run: |
        cat > package.json << 'EOF'
        {
          "name": "weather-kmp",
          "version": "0.0.0",
          "description": "Weather KMP Application - 2025 Standards Compliant",
          "private": true,
          "repository": {
            "type": "git",
            "url": "https://github.com/${{ github.repository }}.git"
          },
          "keywords": [
            "kotlin-multiplatform",
            "android",
            "ios",
            "weather",
            "compose-multiplatform",
            "2025-standards"
          ]
        }
        EOF
        
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

  manual-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      
    - name: Build release artifacts
      run: |
        ./gradlew clean
        ./gradlew :androidApp:assembleRelease
        ./gradlew :androidApp:bundleRelease
        
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install semantic-release
      run: |
        npm install -g \
          semantic-release@21 \
          @semantic-release/changelog@6 \
          @semantic-release/git@10 \
          @semantic-release/github@9 \
          @semantic-release/exec@6 \
          conventional-changelog-conventionalcommits@6
          
    - name: Create manual release config
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "repositoryUrl": "https://github.com/${{ github.repository }}",
          "plugins": [
            [
              "@semantic-release/commit-analyzer",
              {
                "preset": "conventionalcommits",
                "releaseRules": [
                  {"type": "*", "release": "${{ github.event.inputs.release_type }}"}
                ]
              }
            ],
            [
              "@semantic-release/release-notes-generator",
              {
                "preset": "conventionalcommits"
              }
            ],
            [
              "@semantic-release/changelog",
              {
                "changelogFile": "CHANGELOG.md"
              }
            ],
            [
              "@semantic-release/github",
              {
                "assets": [
                  {
                    "path": "androidApp/build/outputs/apk/release/*.apk",
                    "label": "Android APK (${{ github.event.inputs.release_type }} release)"
                  },
                  {
                    "path": "androidApp/build/outputs/bundle/release/*.aab",
                    "label": "Android App Bundle (${{ github.event.inputs.release_type }} release)"
                  }
                ]
              }
            ],
            [
              "@semantic-release/git",
              {
                "assets": ["CHANGELOG.md", "package.json"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\nManual ${{ github.event.inputs.release_type }} release"
              }
            ]
          ]
        }
        EOF
        
    - name: Create package.json for manual release
      run: |
        cat > package.json << 'EOF'
        {
          "name": "weather-kmp",
          "version": "0.0.0",
          "description": "Weather KMP Application - 2025 Standards Compliant",
          "private": true
        }
        EOF
        
    - name: Manual Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

  android-release:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew :shared:allTests :androidApp:testDebugUnitTest
      
    - name: Build Release APK
      run: ./gradlew :androidApp:assembleRelease
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: androidApp/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        asset_name: WeatherKMP-release.apk
        asset_content_type: application/vnd.android.package-archive

  ios-release:
    runs-on: macos-latest
    needs: create-release
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build shared framework for iOS
      run: ./gradlew :shared:assembleXCFramework
      
    - name: Archive iOS app
      run: |
        cd iosApp
        xcodebuild -scheme iosApp -configuration Release -destination "generic/platform=iOS" archive -archivePath build/WeatherKMP.xcarchive
        
    - name: Export IPA
      run: |
        cd iosApp
        xcodebuild -exportArchive -archivePath build/WeatherKMP.xcarchive -exportPath build/ -exportOptionsPlist exportOptions.plist
        
    - name: Upload IPA
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: iosApp/build/WeatherKMP.ipa
        asset_name: WeatherKMP-release.ipa
        asset_content_type: application/octet-stream